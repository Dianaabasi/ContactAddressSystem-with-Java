
package group7.contactAddressSystem;

/*
 * 
 */

    
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import javax.swing.*;

/**
 * @author DIANAABASI EKPENYONG
 */
public class ContactAddressSystem extends JFrame {

    private static DefaultListModel<Contact> listModel;
    private static JList<Contact> listView;
    private static JTextArea contactDetails;

    /**
     * Creates new form NewJFrameForm
     */
    public ContactAddressSystem() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        pack();
    }


    //Top Panel with title
    private JPanel buildTitlePanel() {
        JPanel titlePanel = new JPanel();
        JLabel title = new JLabel("CONTACT ADDRESS SYSTEM", SwingConstants.CENTER);
        title.setFont(new Font("Arial", Font.BOLD, 24));
        title.setForeground(Color.WHITE);
        titlePanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        titlePanel.add(title);
        titlePanel.setBackground(new Color(20, 40, 80));
        return titlePanel;
    }

    //Delete function added to the right side of the splitted window
    public void deleteContact(int index) {
        if (index >= 0 && index < listModel.size()) {
            listModel.remove(index);
        }
    }

    //Display inputed contact details on the right panel
    public void viewContactInfo(int index) {
        if (index >= 0 && index < listModel.size()) {
            Contact contact = listModel.getElementAt(index);
            contactDetails.setText(contact.getFormattedInfo());
        }
    }

    //Adds every created contact in a list form on the left panel
    private void buildContactList() {
        listModel = new DefaultListModel<>();
        listView = new JList<>(listModel);
        listView.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        listView.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedIndex = listView.getSelectedIndex();
                viewContactInfo(selectedIndex);
//                }
            }
        });

    }

    //Building the right panel with the delete button
    private JPanel buildRightPanel() {
        contactDetails = new JTextArea();
        contactDetails.setEditable(false);
        contactDetails.setLineWrap(true);
        contactDetails.setFont(contactDetails.getFont().deriveFont(14f));


        //Delete button on the right panel
        JButton deleteButton = new JButton("Delete Contact");
        deleteButton.addActionListener(e -> {
            int selectedIndex = listView.getSelectedIndex();
            if (selectedIndex != -1) {
                int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this contact?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    deleteContact(selectedIndex);
                    contactDetails.setText("");
                }
            }
        });

        JPanel rightPanel = new JPanel(new BorderLayout());
        rightPanel.add(new JScrollPane(contactDetails), BorderLayout.CENTER);
        rightPanel.add(deleteButton, BorderLayout.SOUTH);

        return rightPanel;
    }

    //Each prompt to add contact details correctly
    private void buildNewContactForm() {
    
        JButton addButton = new JButton("Add Contact");

        addButton.addActionListener(e -> {
            // Create input fields for the new contact form
            JTextField firstNameField = new JTextField(20);
            JTextField lastNameField = new JTextField(20);
            JTextField emailField = new JTextField(20);
            JTextField homeAddressField = new JTextField(20);

            JPanel panel = new JPanel();
            panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
            panel.add(new JLabel("First Name:"));
            panel.add(firstNameField);
            panel.add(new JLabel("Last Name:"));
            panel.add(lastNameField);
            panel.add(new JLabel("Email:"));
            panel.add(emailField);
            panel.add(new JLabel("Home Address:"));
            panel.add(homeAddressField);

            int result = JOptionPane.showConfirmDialog(this, panel, "New Contact", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

            if (result == JOptionPane.OK_OPTION) {
                String firstName = firstNameField.getText();
                String lastName = lastNameField.getText();
                String email = emailField.getText();
                String homeAddress = homeAddressField.getText();

                if (!firstName.isEmpty() && !lastName.isEmpty() && !email.isEmpty() && !homeAddress.isEmpty()) {
                    Contact newContact = new Contact(firstName, lastName, email, homeAddress);
                    listModel.addElement(newContact);
                    JOptionPane.showMessageDialog(this, "Contact added successfully!");
                } else {
                    JOptionPane.showMessageDialog(this, "Fill out all the fields!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        JPanel panel = new JPanel();
        panel.add(addButton);

        this.getContentPane().add(panel, BorderLayout.SOUTH);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (Exception e) {
            // Handle the exception if the look and feel cannot be set
            e.printStackTrace();
        }

        java.awt.EventQueue.invokeLater(() -> {
            int frameWidth = 700;
            int frameHeight = 600;

            ContactAddressSystem gui = new ContactAddressSystem();
            System.out.println("Successfully Compiled");

            gui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            gui.getContentPane().add(gui.buildTitlePanel(), BorderLayout.NORTH);

            gui.setSize(frameWidth, frameHeight);

            gui.buildContactList();
            gui.buildNewContactForm();

            JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, new JScrollPane(listView), gui.buildRightPanel());
            gui.getContentPane().add(splitPane);

            gui.setVisible(true);
        });
    }

}